  # This workflow will run when integration has passed. It installs dependencies, and runs pyinstaller on the source
  # files to create a single binary executable for Windows.
  # For more information see: https://github.com/marketplace/actions/pyinstaller-windows

name: python_deploy

on:
  workflow_run:
    workflows: ["python_integrate"]
    branches: [master]
    types:
      - completed

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install qrcodegen
      - name: Package Application
        uses: JackMcKew/pyinstaller-action-windows@main

      - uses: actions/upload-artifact@v2
        with:
          name: QR-codengrave
          path: bin/dist/windows


  # This workflow will install Python dependencies, run tests and lint with a single version of Python
  # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

  name: python_integrate_lint_and_run_tests

  on:
    push:
      branches: [ "master" ]
    pull_request:
      branches: [ "master" ]

  permissions:
    contents: read

  jobs:
    build:

      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            pip install qrcodegen
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Lint with flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with pytest
          run: |
            pytest
